import numpy
import matplotlib
import math
matplotlib.use('TkAgg')
import matplotlib.pyplot as plt
from matplotlib.pyplot import figure

def plot():

    boxplot_data = [-514, -370, -447, -478, -418, -359, -473, -329,-409, -407, -485, -351, -366, -398, -302, -409, -481, -294, -392, -354, -473, -340, -317, -334, -422, -367, -373, -425, -433, -380, -318, -357, -433, -334, -345, -367, -377, -291, -385, -447, -449, -358, -405, -412, -458, -438, -358, -405,-379, -376, -457, -397, -393, -340, -381, -399, -441, -478, -293, -433, -501, -461, -415, -353, -450, -285, -345, -375, -551, -396, -549, -494, -385, -336, -405, -369, -341, -402, -344, -502, -388, -359, -322, -420, -538, -429, -390, -369,-398, -429, -471, -326, -507, -273, -396, -321, -456, -480, -437, -389], [352.0990990990991, 349.78678678678676, 349.78678678678676, 351.1081081081081, 349.78678678678676, 345.0450450450451, 345.0450450450451, 348.0450450450451, 351.4384384384384, 349.78678678678676, 340.42042042042044, 345.7057057057057, 349.78678678678676, 345.0450450450451, 345.0450450450451, 349.78678678678676, 345.7057057057057, 345.0450450450451, 345.7057057057057, 345.0450450450451, 349.78678678678676, 345.0450450450451, 345.0450450450451, 345.0450450450451, 340.42042042042044, 345.0450450450451, 348.0450450450451, 349.78678678678676, 345.7057057057057, 343.85885885885887, 345.0450450450451, 351.4384384384384, 347.05405405405406, 350.4474474474475, 345.0450450450451, 345.0450450450451, 340.1171171171171, 345.0450450450451, 350.4474474474475, 349.78678678678676, 345.0450450450451, 344.18918918918916, 346.3663663663664, 350.4474474474475, 349.78678678678676, 345.0450450450451, 348.0450450450451, 345.0450450450451, 345.0450450450451, 332.1171171171171]

    boxplot_xaxis = ["Random", "Simulated annealing"]

    # Make the plot of selected checkboxes
    ax = plt.subplot(111)
    plt.boxplot(boxplot_data)
    plt.xticks(fontsize=16)
    ax.set_xticklabels(boxplot_xaxis)
    ax.set_ylim([-600,400])
    plt.ylabel("Schedule points", fontsize=14)
    plt.title("Comparison between random and simulated annealing", fontsize=16)
    plt.grid()
    plt.show()

if __name__ == "__main__":
    plot()
